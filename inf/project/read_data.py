# --- START OF FILE read_data.py ---
import sqlite3
import os
import csv

# –ü–æ—Ä—è–¥–æ–∫ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–∞–±–ª–∏—Ü –≤–∞–∂–µ–Ω –∏–∑-–∑–∞ –≤–Ω–µ—à–Ω–∏—Ö –∫–ª—é—á–µ–π.
# 'Stadiums' —É–±—Ä–∞–Ω–∞.
TABLE_LOAD_ORDER = [
    'leagues',
    'positions',
    'teams',        # –ó–∞–≤–∏—Å–∏—Ç –æ—Ç leagues
    'players',      # –ó–∞–≤–∏—Å–∏—Ç –æ—Ç teams, positions
    'coaches',      # –ó–∞–≤–∏—Å–∏—Ç –æ—Ç teams
    'seasons',      # –ó–∞–≤–∏—Å–∏—Ç –æ—Ç leagues
    'matches',      # –ó–∞–≤–∏—Å–∏—Ç –æ—Ç seasons, teams
    'trophies',     # –ó–∞–≤–∏—Å–∏—Ç –æ—Ç teams
    'goals'         # –ó–∞–≤–∏—Å–∏—Ç –æ—Ç matches, players, teams
]

def seed_from_csv_folder(seeds_dir: str, db_path: str = 'sports_league.db'):
    """–ó–∞–ø–æ–ª–Ω—è–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ CSV —Ñ–∞–π–ª–æ–≤ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–π –ø–∞–ø–∫–µ."""
    if not os.path.isdir(seeds_dir):
        raise FileNotFoundError(f"–ü–∞–ø–∫–∞ —Å CSV —Ñ–∞–π–ª–∞–º–∏ ¬´{seeds_dir}¬ª –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

    conn = sqlite3.connect(db_path)
    cursor = conn.cursor()

    # –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã –∏ –∏—Ö –∫–æ–ª–æ–Ω–∫–∏ –∏–∑ –ë–î
    cursor.execute("SELECT name FROM sqlite_master WHERE type='table';")
    existing_tables = {row[0].lower() for row in cursor.fetchall()} # –ü—Ä–∏–≤–æ–¥–∏–º –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
    table_columns = {}
    for table_name_db in existing_tables:
        cursor.execute(f'PRAGMA table_info("{table_name_db}")')
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º–µ–Ω–∞ –∫–æ–ª–æ–Ω–æ–∫ –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ
        table_columns[table_name_db] = {row[1].lower() for row in cursor.fetchall()}

    try:
        # –í–∫–ª—é—á–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –≤–Ω–µ—à–Ω–∏—Ö –∫–ª—é—á–µ–π
        cursor.execute("PRAGMA foreign_keys = ON;")
    except sqlite3.Error as e:
         print(f"Warning: –ù–µ —É–¥–∞–ª–æ—Å—å –≤–∫–ª—é—á–∏—Ç—å foreign_keys: {e}")

    for table_name_lower in TABLE_LOAD_ORDER:
        # –ò—â–µ–º –∏–º—è —Ç–∞–±–ª–∏—Ü—ã –≤ –ë–î –±–µ–∑ —É—á–µ—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞
        actual_table_name_in_db = next((name for name in existing_tables if name == table_name_lower), None)

        if not actual_table_name_in_db:
             print(f"–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –¢–∞–±–ª–∏—Ü–∞ '{table_name_lower}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –ë–î. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º.")
             continue

        csv_filename = f"{table_name_lower}.csv" # –ò–º—è —Ñ–∞–π–ª–∞ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –∏–º–µ–Ω–µ–º —Ç–∞–±–ª–∏—Ü—ã –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ
        csv_path = os.path.join(seeds_dir, csv_filename)

        if not os.path.exists(csv_path):
            print(f"–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –§–∞–π–ª ¬´{csv_path}¬ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –¢–∞–±–ª–∏—Ü–∞ ¬´{table_name_lower}¬ª –±—É–¥–µ—Ç –ø—Ä–æ–ø—É—â–µ–Ω–∞.")
            continue

        print(f"–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ ¬´{csv_path}¬ª –≤ —Ç–∞–±–ª–∏—Ü—É ¬´{actual_table_name_in_db}¬ª...")

        try:
            with open(csv_path, mode='r', newline='', encoding='utf-8') as f:
                reader = csv.reader(f)

                csv_headers_raw = next(reader, None)
                if csv_headers_raw is None:
                    print(f"  ‚Ä¢ –§–∞–π–ª '{csv_filename}' –ø—É—Å—Ç–æ–π, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º.")
                    continue

                # –ü—Ä–∏–≤–æ–¥–∏–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ CSV –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É
                csv_headers = [h.lower() for h in csv_headers_raw]

                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–∏–µ –∫–æ–ª–æ–Ω–∫–∏ –∏–∑ CSV —Å—É—â–µ—Å—Ç–≤—É—é—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ –ë–î (—Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º lower case)
                valid_csv_indices = []
                db_cols_for_table = table_columns.get(actual_table_name_in_db, set())
                actual_db_columns_to_insert = [] # –ò–º–µ–Ω–∞ –∫–æ–ª–æ–Ω–æ–∫ –∫–∞–∫ –æ–Ω–∏ –µ—Å—Ç—å –≤ –ë–î

                # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –∏–º–µ–Ω–∞ –∫–æ–ª–æ–Ω–æ–∫ –∏–∑ –ë–î –¥–ª—è SQL –∑–∞–ø—Ä–æ—Å–∞
                cursor.execute(f'PRAGMA table_info("{actual_table_name_in_db}")')
                db_column_name_map = {row[1].lower(): row[1] for row in cursor.fetchall()}

                for idx, csv_header_lower in enumerate(csv_headers):
                    if csv_header_lower in db_cols_for_table:
                        valid_csv_indices.append(idx)
                        actual_db_columns_to_insert.append(db_column_name_map[csv_header_lower])
                    else:
                        print(f"  ‚Ä¢ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ö–æ–ª–æ–Ω–∫–∞ '{csv_headers_raw[idx]}' –∏–∑ CSV –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ '{actual_table_name_in_db}' –ë–î. –ò–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç—Å—è.")

                if not actual_db_columns_to_insert:
                    print(f"  ‚Ä¢ –û—à–∏–±–∫–∞: –í CSV —Ñ–∞–π–ª–µ '{csv_filename}' –Ω–µ—Ç –∫–æ–ª–æ–Ω–æ–∫, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ç–∞–±–ª–∏—Ü–µ '{actual_table_name_in_db}'. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º.")
                    continue

                placeholders = ', '.join('?' for _ in actual_db_columns_to_insert)
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –∏–º–µ–Ω–∞ –∫–æ–ª–æ–Ω–æ–∫ –ë–î –≤ –∑–∞–ø—Ä–æ—Å–µ
                columns_str = ', '.join(f'"{h}"' for h in actual_db_columns_to_insert)
                insert_sql = f'INSERT INTO "{actual_table_name_in_db}" ({columns_str}) VALUES ({placeholders})'

                rows_inserted = 0
                rows_skipped = 0
                for i, row in enumerate(reader, 1):
                    # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ –∏–Ω–¥–µ–∫—Å–∞–º –∏–∑ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
                    row_data_to_insert = []
                    try:
                        for idx in valid_csv_indices:
                            row_data_to_insert.append(row[idx])
                    except IndexError:
                        print(f"  ‚Ä¢ –°—Ç—Ä–æ–∫–∞ {i} —Ñ–∞–π–ª–∞ '{csv_filename}' –ø—Ä–æ–ø—É—â–µ–Ω–∞ (–Ω–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–æ–ª–±—Ü–æ–≤?): {row}")
                        rows_skipped += 1
                        continue

                    # –ó–∞–º–µ–Ω—è–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ –Ω–∞ None –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –≤—Å—Ç–∞–≤–∫–∏ NULL –≤ –ë–î
                    processed_row = [None if val == '' else val for val in row_data_to_insert]

                    try:
                        cursor.execute(insert_sql, processed_row)
                        rows_inserted += 1
                    except sqlite3.IntegrityError as e:
                         print(f"  ‚Ä¢ –û—à–∏–±–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö –≤ —Å—Ç—Ä–æ–∫–µ {i} —Ç–∞–±–ª–∏—Ü—ã {actual_table_name_in_db}: {e}")
                         print(f"    –ö–æ–ª–æ–Ω–∫–∏ –ë–î: {actual_db_columns_to_insert}")
                         print(f"    –î–∞–Ω–Ω—ã–µ:     {processed_row}")
                         rows_skipped += 1
                    except sqlite3.Error as e:
                         print(f"  ‚Ä¢ –û—à–∏–±–∫–∞ SQLite –≤ —Å—Ç—Ä–æ–∫–µ {i} —Ç–∞–±–ª–∏—Ü—ã {actual_table_name_in_db}: {e}")
                         print(f"    –î–∞–Ω–Ω—ã–µ:     {processed_row}")
                         rows_skipped += 1

            print(f"  ‚úì –í—Å—Ç–∞–≤–ª–µ–Ω–æ {rows_inserted} —Å—Ç—Ä–æ–∫ –≤ '{actual_table_name_in_db}'.")
            if rows_skipped > 0:
                print(f"  ‚úó –ü—Ä–æ–ø—É—â–µ–Ω–æ {rows_skipped} —Å—Ç—Ä–æ–∫.")

        except FileNotFoundError:
             print(f"  ‚Ä¢ –û–®–ò–ë–ö–ê: –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω ¬´{csv_path}¬ª –≤–æ –≤—Ä–µ–º—è –æ—Ç–∫—Ä—ã—Ç–∏—è.")
        except Exception as e:
             print(f"  ‚Ä¢ –û–®–ò–ë–ö–ê: –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞ ¬´{csv_path}¬ª: {e}")

    try:
        conn.commit()
        print("‚úÖ –í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ CSV-–¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω—ã –≤ –ë–î.")
    except sqlite3.Error as e:
        print(f"üö® –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–∏–∫—Å–∞—Ü–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π (commit): {e}")
        print("  ‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ, –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ –±—ã–ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.")
        conn.rollback()
    finally:
        if conn:
            conn.close()

if __name__ == '__main__':
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç–∏ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Ç–µ–∫—É—â–µ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞
    script_dir = os.path.dirname(__file__)
    seeds_directory = os.path.join(script_dir, 'sports_league_csv_data')
    database_file = os.path.join(script_dir, 'sports_league.db')

    if not os.path.isdir(seeds_directory):
        print(f"–û–®–ò–ë–ö–ê: –ü–∞–ø–∫–∞ —Å CSV —Ñ–∞–π–ª–∞–º–∏ '{seeds_directory}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–∞–ø–∫–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç CSV —Ñ–∞–π–ª—ã.")
    else:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª –ë–î. –ï—Å–ª–∏ –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ.
        if not os.path.exists(database_file):
             print(f"–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –§–∞–π–ª –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö '{database_file}' –Ω–µ –Ω–∞–π–¥–µ–Ω.")
             print("–°–æ–∑–¥–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...")
             # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å–æ–∑–¥–∞–Ω–∏—è –ë–î
             try:
                 from db import create_database
                 create_database(database_file)
             except ImportError:
                 print("–û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å 'create_database' –∏–∑ db.py.")
             except Exception as create_e:
                 print(f"–û–®–ò–ë–ö–ê –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {create_e}")


        # –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏
        try:
           print("-" * 20)
           print("–ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö –∏–∑ CSV...")
           seed_from_csv_folder(seeds_directory, database_file)
        except FileNotFoundError as e:
             print(e)
        except Exception as e:
             print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
# --- END OF FILE read_data.py ---